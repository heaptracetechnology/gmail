omg: 1
lifecycle:
  startup:
    command: ["gmail"]
health:
  http:
    path: /health
    port: 3000
info:
  version: 1.0.0
  title: Gmail microservice.
  description: This is a gmail service.
  contact:
    name: Rohit Shetty
    url: https://github.com/ht68rohit
    email: rohits@heaptrace.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
actions:
  authorization:
    help: This will return URL, copy paste URL on browser and get authorization code.
    http:
      port: 3000
      method: post
      path: /authorization
      contentType: application/json
    arguments:
      scope: 
        type: string
        in: requestBody
        required: true
        help: The scope to access user data (eg-"https://mail.google.com/")
    output:
      type: map
      contentType: application/json
  accessToken:
    help: Return token object with access token, refresh token , token type and expiry.
    http:
      port: 3000
      method: post
      path: /accessToken
      contentType: application/json
    arguments:
      authorizationCode: 
        type: string
        in: requestBody
        required: true
        help: The authorizationCode code.
    output:
      type: map
      contentType: application/json
  refreshToken:
    help: Return new token object with access token, refresh token ,token type and expiry.
    http:
      port: 3000
      method: post
      path: /refreshToken
      contentType: application/json
    arguments:
      token: 
        type: map
        in: requestBody
        required: true
        help: The old token object with access token, refresh token ,token type and expiry, all the fields are mandatory.
    output:
      type: map
      contentType: application/json
  sendMail:
    help: Send mail.
    http:
      port: 3000
      method: post
      path: /sendMail
      contentType: application/json
    arguments:
      accessToken: 
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The sender email address.
      to: 
        type: list
        in: requestBody
        required: true
        help: The list of receiver's email address.
      subject: 
        type: string
        in: requestBody
        required: true
        help: The subject to the mail.
      body: 
        type: string
        in: requestBody
        required: true
        help: The message body of mail.
    output:   
      type: map
      contentType: application/json
  createLabel:
    help: Create new label, they are used to categorize messages and threads within the user's mailbox.
    http:
      port: 3000
      method: post
      path: /createLabel
      contentType: application/json
    arguments:
      accessToken: 
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The email address of account holder.
      name:
        type: string
        in: requestBody
        required: true
        help: The name for new label.
      backgroundColor:
        type: string
        in: requestBody
        help: The background color represented as hex string "#RRGGBB" (ex "#000000"). This field is required in order to set the color of a label. Only the following predefined set of color values are allowed-
              # "#000000", "#434343", "#666666", "#999999", "#cccccc", "#efefef", "#f3f3f3", "#ffffff", "#fb4c2f", "#ffad47", "#fad165", "#16a766", "#43d692", "#4a86e8", "#a479e2", "#f691b3", "#f6c5be", "#ffe6c7", "#fef1d1", "#b9e4d0", "#c6f3de", "#c9daf8", "#e4d7f5", "#fcdee8",
              # "#efa093", "#ffd6a2", "#fce8b3", "#89d3b2", "#a0eac9", "#a4c2f4", "#d0bcf1", "#fbc8d9", "#e66550", "#ffbc6b", "#fcda83", "#44b984", "#68dfa9", "#6d9eeb", "#b694e8", "#f7a7c0", "#cc3a21", "#eaa041", "#f2c960", "#149e60", "#3dc789", "#3c78d8", "#8e63ce", "#e07798",
              # "#ac2b16", "#cf8933", "#d5ae49", "#0b804b", "#2a9c68", "#285bac", "#653e9b", "#b65775", "#822111", "#a46a21", "#aa8831", "#076239", "#1a764d", "#1c4587", "#41236d", "#83334c"
      textColor:
        type: string
        in: requestBody
        help: The text color of the label, represented as hex string. This field is required in order to set the color of a label. Only the following predefined set of color values are allowed -
              # "#000000", "#434343", "#666666", "#999999", "#cccccc", "#efefef", "#f3f3f3", "#ffffff", "#fb4c2f", "#ffad47", "#fad165", "#16a766", "#43d692", "#4a86e8", "#a479e2", "#f691b3", "#f6c5be", "#ffe6c7", "#fef1d1", "#b9e4d0", "#c6f3de", "#c9daf8", "#e4d7f5", "#fcdee8",
              # "#efa093", "#ffd6a2", "#fce8b3", "#89d3b2", "#a0eac9", "#a4c2f4", "#d0bcf1", "#fbc8d9", "#e66550", "#ffbc6b", "#fcda83", "#44b984", "#68dfa9", "#6d9eeb", "#b694e8", "#f7a7c0", "#cc3a21", "#eaa041", "#f2c960", "#149e60", "#3dc789", "#3c78d8", "#8e63ce", "#e07798",
              # "#ac2b16", "#cf8933", "#d5ae49", "#0b804b", "#2a9c68", "#285bac", "#653e9b", "#b65775", "#822111", "#a46a21", "#aa8831", "#076239", "#1a764d", "#1c4587", "#41236d", "#83334c"
      labelListVisibility:
        type: string
        in: requestBody
        help: The visibility of the label in the label list in the Gmail web interface.Possible values are "labelHide", "labelShow", "labelShowIfUnread".
      messageListVisibility:
        type: string
        in: requestBody
        help: The visibility of the label in the message list in the Gmail web interface.Possible values "hide" and "show".
    output:   
      type: map
      contentType: application/json
  deleteLabel:
    help: Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to.
    http:
      port: 3000
      method: post
      path: /deleteLabel
      contentType: application/json
    arguments:
      accessToken: 
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The email address of account holder.
      labelId:
        type: string
        in: requestBody
        required: true
        help: The label ID to delete.
    output:   
      type: map
      contentType: application/json
  patchLabel:
    help: Updates the specified label. This method supports patch semantics.
    http:
      port: 3000
      method: post
      path: /patchLabel
      contentType: application/json
    arguments:
      accessToken: 
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The email address of account holder.
      labelId:
        type: string
        in: requestBody
        required: true
        help: The label ID to update.
      name:
        type: string
        in: requestBody
        help: The name for new label.
      backgroundColor:
        type: string
        in: requestBody
        help: The background color represented as hex string "#RRGGBB" (ex "#000000"). This field is required in order to set the color of a label. Only the following predefined set of color values are allowed-
              # "#000000", "#434343", "#666666", "#999999", "#cccccc", "#efefef", "#f3f3f3", "#ffffff", "#fb4c2f", "#ffad47", "#fad165", "#16a766", "#43d692", "#4a86e8", "#a479e2", "#f691b3", "#f6c5be", "#ffe6c7", "#fef1d1", "#b9e4d0", "#c6f3de", "#c9daf8", "#e4d7f5", "#fcdee8",
              # "#efa093", "#ffd6a2", "#fce8b3", "#89d3b2", "#a0eac9", "#a4c2f4", "#d0bcf1", "#fbc8d9", "#e66550", "#ffbc6b", "#fcda83", "#44b984", "#68dfa9", "#6d9eeb", "#b694e8", "#f7a7c0", "#cc3a21", "#eaa041", "#f2c960", "#149e60", "#3dc789", "#3c78d8", "#8e63ce", "#e07798",
              # "#ac2b16", "#cf8933", "#d5ae49", "#0b804b", "#2a9c68", "#285bac", "#653e9b", "#b65775", "#822111", "#a46a21", "#aa8831", "#076239", "#1a764d", "#1c4587", "#41236d", "#83334c"
      textColor:
        type: string
        in: requestBody
        help: The text color of the label, represented as hex string (ex "#000000"). This field is required in order to set the color of a label. Only the following predefined set of color values are allowed -
              # "#000000", "#434343", "#666666", "#999999", "#cccccc", "#efefef", "#f3f3f3", "#ffffff", "#fb4c2f", "#ffad47", "#fad165", "#16a766", "#43d692", "#4a86e8", "#a479e2", "#f691b3", "#f6c5be", "#ffe6c7", "#fef1d1", "#b9e4d0", "#c6f3de", "#c9daf8", "#e4d7f5", "#fcdee8",
              # "#efa093", "#ffd6a2", "#fce8b3", "#89d3b2", "#a0eac9", "#a4c2f4", "#d0bcf1", "#fbc8d9", "#e66550", "#ffbc6b", "#fcda83", "#44b984", "#68dfa9", "#6d9eeb", "#b694e8", "#f7a7c0", "#cc3a21", "#eaa041", "#f2c960", "#149e60", "#3dc789", "#3c78d8", "#8e63ce", "#e07798",
              # "#ac2b16", "#cf8933", "#d5ae49", "#0b804b", "#2a9c68", "#285bac", "#653e9b", "#b65775", "#822111", "#a46a21", "#aa8831", "#076239", "#1a764d", "#1c4587", "#41236d", "#83334c"
      labelListVisibility:
        type: string
        in: requestBody
        help: The visibility of the label in the label list in the Gmail web interface.Possible values are "labelHide", "labelShow", "labelShowIfUnread".
      messageListVisibility:
        type: string
        in: requestBody
        help: The visibility of the label in the message list in the Gmail web interface.Possible values "hide" and "show".
    output:   
      type: map
      contentType: application/json
  labelList:
    help: Lists all labels from user's mailbox.
    http:
      port: 3000
      method: post
      path: /labelList
      contentType: application/json
    arguments:
      accessToken: 
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The email address of account holder.
    output:
      type: map
      contentType: application/json
  createFilter:
    help: Creates a filter.
    http:
      port: 3000
      method: post
      path: /createFilter
      contentType: application/json
    arguments:
      accessToken:
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The email address of account holder.
      addLabelId:
        type: string
        in: requestBody
        help: The label to add to the message.
      removeLabelId:
        type: string
        in: requestBody
        help: The label to remove from the message.
      excludeChats:
        type: boolean
        in: requestBody
        help: Whether the response should exclude chats.
      from:
        type: string
        in: requestBody
        required: true
        help: The sender's email address.
      to:
        type: string
        in: requestBody
        help: The recipient's display name or email address. Includes recipients in the "to", "cc", and "bcc" header fields. You can use simply the local part of the email address. For example, "example" and "example@" both match "example@gmail.com". This field is case-insensitive.
      subject:
        type: string
        in: requestBody
        help: Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.
      hasAttachment:
        type: boolean
        in: requestBody
        help: Whether the message has any attachment.
      negatedQuery:
        type: string
        in: requestBody
        help: Only return messages not matching the specified query. Supports the same query format as the Gmail search box.
      query:
        type: string
        in: requestBody
        help: Only return messages matching the specified query. Supports the same query format as the Gmail search box.
      size:
        type: int
        in: requestBody
        help: The size of the entire RFC822 message in bytes, including all headers and attachments.
      sizeComparison:
        type: string
        in: requestBody
        help: How the message size in bytes should be in relation to the size field. Acceptable values are "larger", "smaller" and "unspecified"
    output:
      type: map
      contentType: application/json
  deleteFilter:
    help: Delete a filter.
    http:
      port: 3000
      method: post
      path: /deleteFilter
      contentType: application/json
    arguments:
      accessToken:
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The email address of account holder.
      filterId:
        type: string
        in: requestBody
        help: The filter ID to delete.
    output:
      type: map
      contentType: application/json
  filterList:
    help: List all the filter from setting.
    http:
      port: 3000
      method: post
      path: /filterList
      contentType: application/json
    arguments:
      accessToken:
        type: string
        in: requestBody
        required: true
        help: The access token.
      userId: 
        type: string
        in: requestBody
        required: true
        help: The email address of account holder.
    output:
      type: map
      contentType: application/json
  receive:
    help: Start receiving emails from inbox.
    events:
      mail:
        help: Triggered anytime when any new email is occurred in mail inbox.
        arguments: 
          userId:
            type: string
            in: requestBody
            required: true
            help: The receiver account email address.
          accessToken:
            type: string
            in: requestBody
            required: true
            help: The access token to use gmail API.
        http: 
          port: 3000
          subscribe:
            method: post
            path: /receive
            contentType: application/json
        output:
          contentType: application/json
          type: map
environment:
  CREDENTIAL_JSON:
    type: string
    required: true
    help: Base64 data of credential.json' file.   
